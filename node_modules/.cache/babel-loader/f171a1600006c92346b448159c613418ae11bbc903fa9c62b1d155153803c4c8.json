{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nkont001\\\\Desktop\\\\tmain\\\\thabani-ai\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\n// App.tsx\nimport React, { useRef, useCallback, useState } from 'react';\nimport Webcam from 'react-webcam';\nimport Tesseract from 'tesseract.js';\nimport Modal from './Modal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [extractedText, setExtractedText] = useState(null);\n  const [isFrontCamera, setIsFrontCamera] = useState(true);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const capture = useCallback(() => {\n    var _webcamRef$current;\n    const imageSrc = (_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : _webcamRef$current.getScreenshot();\n    if (imageSrc) {\n      setCapturedImage(imageSrc);\n      Tesseract.recognize(imageSrc, 'eng').then(({\n        data: {\n          text\n        }\n      }) => {\n        setExtractedText(text);\n        setIsModalOpen(true);\n      }).catch(error => {\n        console.error('Error during OCR:', error);\n        setExtractedText(null);\n      });\n    }\n  }, [webcamRef]);\n  const switchCamera = useCallback(() => {\n    setIsFrontCamera(prevState => !prevState);\n  }, []);\n  const closeModal = useCallback(() => {\n    setIsModalOpen(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Thabani's Image Text Extraction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"webcam-container\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        videoConstraints: {\n          facingMode: isFrontCamera ? 'user' : 'environment'\n        },\n        style: {\n          width: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"capture-button\",\n        onClick: capture,\n        children: \"Capture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"switch-camera-button\",\n        onClick: switchCamera,\n        children: \"Switch Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), capturedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"captured-image\",\n      src: capturedImage,\n      alt: \"captured\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      closeModal: closeModal,\n      text: extractedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dCgiFAloUks2NbftEixPxhqZ3zk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useCallback","useState","Webcam","Tesseract","Modal","jsxDEV","_jsxDEV","App","_s","webcamRef","capturedImage","setCapturedImage","extractedText","setExtractedText","isFrontCamera","setIsFrontCamera","isModalOpen","setIsModalOpen","capture","_webcamRef$current","imageSrc","current","getScreenshot","recognize","then","data","text","catch","error","console","switchCamera","prevState","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","audio","ref","screenshotFormat","videoConstraints","facingMode","style","width","height","onClick","src","alt","isOpen","_c","$RefreshReg$"],"sources":["C:/Users/nkont001/Desktop/tmain/thabani-ai/src/App.tsx"],"sourcesContent":["// App.tsx\r\nimport React, { useRef, useCallback, useState } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport Tesseract from 'tesseract.js';\r\nimport Modal from './Modal';\r\nimport './App.css';\r\n\r\nconst App: React.FC = () => {\r\n  const webcamRef = useRef<Webcam>(null);\r\n  const [capturedImage, setCapturedImage] = useState<string | null>(null);\r\n  const [extractedText, setExtractedText] = useState<string | null>(null);\r\n  const [isFrontCamera, setIsFrontCamera] = useState<boolean>(true);\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n\r\n  const capture = useCallback(() => {\r\n    const imageSrc = webcamRef.current?.getScreenshot();\r\n    if (imageSrc) {\r\n      setCapturedImage(imageSrc);\r\n      Tesseract.recognize(imageSrc, 'eng')\r\n        .then(({ data: { text } }) => {\r\n          setExtractedText(text);\r\n          setIsModalOpen(true);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error during OCR:', error);\r\n          setExtractedText(null);\r\n        });\r\n    }\r\n  }, [webcamRef]);\r\n\r\n  const switchCamera = useCallback(() => {\r\n    setIsFrontCamera(prevState => !prevState);\r\n  }, []);\r\n\r\n  const closeModal = useCallback(() => {\r\n    setIsModalOpen(false);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1 className=\"app-title\">Thabani's Image Text Extraction</h1>\r\n      <div className=\"webcam-container\">\r\n        <Webcam\r\n          audio={false}\r\n          ref={webcamRef}\r\n          screenshotFormat=\"image/jpeg\"\r\n          videoConstraints={{\r\n            facingMode: isFrontCamera ? 'user' : 'environment',\r\n          }}\r\n          style={{ width: '100%', height: 'auto' }}\r\n        />\r\n        <button className=\"capture-button\" onClick={capture}>Capture</button>\r\n        <button className=\"switch-camera-button\" onClick={switchCamera}>Switch Camera</button>\r\n      </div>\r\n      {capturedImage && <img className=\"captured-image\" src={capturedImage} alt=\"captured\" />}\r\n      <Modal isOpen={isModalOpen} closeModal={closeModal} text={extractedText} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}