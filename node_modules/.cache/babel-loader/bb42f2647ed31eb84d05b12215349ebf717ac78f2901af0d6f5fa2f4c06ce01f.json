{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nkont001\\\\Desktop\\\\tmain\\\\thabani-ai\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\n// App.tsx\nimport React, { useRef, useCallback, useState } from 'react';\nimport Webcam from 'react-webcam';\nimport Tesseract from 'tesseract.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [extractedText, setExtractedText] = useState(null);\n  const [isFrontCamera, setIsFrontCamera] = useState(true);\n  const capture = useCallback(() => {\n    var _webcamRef$current;\n    const imageSrc = (_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : _webcamRef$current.getScreenshot();\n    if (imageSrc) {\n      setCapturedImage(imageSrc);\n      Tesseract.recognize(imageSrc, 'eng').then(({\n        data: {\n          text\n        }\n      }) => {\n        setExtractedText(text);\n      }).catch(error => {\n        console.error('Error during OCR:', error);\n        setExtractedText(null);\n      });\n    }\n  }, [webcamRef]);\n  const switchCamera = useCallback(() => {\n    setIsFrontCamera(prevState => !prevState);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Thabani's Image Text Extraction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"webcam-container\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        videoConstraints: {\n          facingMode: isFrontCamera ? 'user' : 'environment'\n        },\n        style: {\n          width: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"capture-button\",\n        onClick: capture,\n        children: \"Capture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"switch-camera-button\",\n        onClick: switchCamera,\n        children: \"Switch Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), capturedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"captured-image\",\n      src: capturedImage,\n      alt: \"captured\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this), extractedText && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extracted-text\",\n      children: [\"Extracted Text: \", extractedText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"AZorLv7zgChkGxniQxY7dFGa3tI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useCallback","useState","Webcam","Tesseract","jsxDEV","_jsxDEV","App","_s","webcamRef","capturedImage","setCapturedImage","extractedText","setExtractedText","isFrontCamera","setIsFrontCamera","capture","_webcamRef$current","imageSrc","current","getScreenshot","recognize","then","data","text","catch","error","console","switchCamera","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","audio","ref","screenshotFormat","videoConstraints","facingMode","style","width","height","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/nkont001/Desktop/tmain/thabani-ai/src/App.tsx"],"sourcesContent":["// App.tsx\r\nimport React, { useRef, useCallback, useState } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport Tesseract from 'tesseract.js';\r\nimport './App.css';\r\n\r\nconst App: React.FC = () => {\r\n  const webcamRef = useRef<Webcam>(null);\r\n  const [capturedImage, setCapturedImage] = useState<string | null>(null);\r\n  const [extractedText, setExtractedText] = useState<string | null>(null);\r\n  const [isFrontCamera, setIsFrontCamera] = useState<boolean>(true);\r\n\r\n  const capture = useCallback(() => {\r\n    const imageSrc = webcamRef.current?.getScreenshot();\r\n    if (imageSrc) {\r\n      setCapturedImage(imageSrc);\r\n      Tesseract.recognize(imageSrc, 'eng')\r\n        .then(({ data: { text } }) => {\r\n          setExtractedText(text);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error during OCR:', error);\r\n          setExtractedText(null);\r\n        });\r\n    }\r\n  }, [webcamRef]);\r\n\r\n  const switchCamera = useCallback(() => {\r\n    setIsFrontCamera(prevState => !prevState);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1 className=\"app-title\">Thabani's Image Text Extraction</h1>\r\n      <div className=\"webcam-container\">\r\n        <Webcam\r\n          audio={false}\r\n          ref={webcamRef}\r\n          screenshotFormat=\"image/jpeg\"\r\n          videoConstraints={{\r\n            facingMode: isFrontCamera ? 'user' : 'environment',\r\n          }}\r\n          style={{ width: '100%', height: 'auto' }}\r\n        />\r\n        <button className=\"capture-button\" onClick={capture}>Capture</button>\r\n        <button className=\"switch-camera-button\" onClick={switchCamera}>Switch Camera</button>\r\n      </div>\r\n      {capturedImage && <img className=\"captured-image\" src={capturedImage} alt=\"captured\" />}\r\n      {extractedText && <div className=\"extracted-text\">Extracted Text: {extractedText}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}